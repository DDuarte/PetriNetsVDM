class Arc
  instance variables
    public place: Place;
    public transition: Transition;
  operations
    protected Arc: Place * Transition ==> Arc
    Arc(p, t) == (
      place := p;
      transition := t;
      return self;
    );

    public isEnabled: map Place to nat ==> bool
    isEnabled(marking) == is subclass responsibility;
end Arc

class WeightedArc is subclass of Arc
  instance variables
    public weight: nat;
  operations
    protected WeightedArc: Place * Transition * nat ==> WeightedArc
    WeightedArc(p, t, wght) == (
      place := p;
      transition := t;
      weight := wght;
      return self
    );
end WeightedArc

class InputArc is subclass of WeightedArc
  operations
    public InputArc: Place * Transition * nat ==> InputArc
    InputArc(source, target, wght) == (
      place := source;
      transition := target;
      weight := wght;
      return self;
    );

    public isEnabled: map Place to nat ==> bool
    isEnabled(marking) == (
      return marking(place) >= weight;
    );
end InputArc

class OutputArc is subclass of WeightedArc
  operations
    public OutputArc: Transition * Place * nat ==> OutputArc
    OutputArc(source, target, wght) == (
      transition := source;
      place := target;
      weight := wght;
      return self;
    );

    public isEnabled: map Place to nat ==> bool
    isEnabled(-) == (
      return true;
    );
end OutputArc
